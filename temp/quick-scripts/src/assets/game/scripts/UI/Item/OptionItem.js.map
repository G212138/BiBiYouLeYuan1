{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\OptionItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qFAAoF;AACpF,mEAAkE;AAClE,kDAAiD;AACjD,uCAAkC;AAG5B,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAwC,8BAAY;IAApD;QAAA,qEA6BC;QA1BW,kBAAY,GAAY,IAAI,CAAC;QAE7B,cAAQ,GAAY,IAAI,CAAC;;IAwBrC,CAAC;IAtBW,gCAAW,GAAnB,UAAoB,KAAK;QACrB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAEO,+BAAU,GAAlB,UAAmB,KAAK;QACpB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,iCAAe,CAAC,QAAQ,CAAC,qBAAS,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACzD,CAAC;IAEO,8BAAS,GAAjB,UAAkB,KAAK;QACnB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,IAAI,iBAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC7D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxD;aAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IAEO,0BAAK,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAzBD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACmB;IAErC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACe;IALhB,UAAU;QAD9B,OAAO;OACa,UAAU,CA6B9B;IAAD,iBAAC;CA7BD,AA6BC,CA7BuC,EAAE,CAAC,SAAS,GA6BnD;kBA7BoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import { ListenerManager } from \"../../../../frame/scripts/Manager/ListenerManager\";\r\nimport { HitTest } from \"../../../../frame/scripts/Utils/HitTest\";\r\nimport { EventType } from \"../../Data/EventType\";\r\nimport FillArea from \"./FillArea\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OptionItem extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    private optionParent: cc.Node = null;\r\n    @property(cc.Node)\r\n    private fillArea: cc.Node = null;\r\n\r\n    private onDragStart(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n    }\r\n\r\n    private onDragMove(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        ListenerManager.dispatch(EventType.DRAG_OPTION, pos);\r\n    }\r\n\r\n    private onDragEnd(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        if (HitTest.posInRect(new cc.Vec2(pos.x, pos.y), this.fillArea)) {\r\n            this.fillArea.getComponent(FillArea).fill(this.node);\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    private reset() {\r\n        this.node.parent = this.optionParent;\r\n        this.node.position = cc.v3(0, 0);\r\n    }\r\n}\r\n"]}